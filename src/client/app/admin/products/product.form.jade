form.pure-form.pure-form-stacked(name="productForm", novalidate="")
  fieldset
    .child-container
      ng-form(name="productForm")
        .form-container
          label(for="name", ng-show="productForm.name.$valid || productForm.name.$pristine")
            | Nombre:
          label.error(for="name", ng-show="productForm.name.$invalid && productForm.name.$dirty")
            | Nombre es requerido:
          .form-icon
            input.pure-input-1#name(name="name", data-ng-model="form.name", required="")
            i.fa.fa-dot-circle-o.medium-icon(ng-show="productForm.name.$pristine")
            i.fa.fa-check-circle-o.success.medium-icon(ng-show="productForm.name.$valid && productForm.name.$dirty")
            i.fa.fa-times-circle-o.error.medium-icon(ng-show="productForm.name.$invalid && productForm.name.$dirty")
        .form-container
          label(for="available")
            | Diponibilidad:
          select.complete-1(data-ng-model="available", data-ng-change="form.available = available.name" data-ng-options="item as item.label for item in product.availables track by item.name")
          input(type="hidden", data-ng-model="form.available")
        .form-container(data-ng-show="form.available == 'available'")
          label(for="stock", ng-show="productForm.stock.$valid || productForm.stock.$pristine")
            | Cantidad:
          label.error(for="stock", ng-show="productForm.stock.$invalid && productForm.stock.$dirty")
            | Cantidad es requerido:
          .form-icon
            input.pure-input-1#stock(name="stock", data-ng-model="form.stock", required="")
            i.fa.fa-dot-circle-o.medium-icon(ng-show="productForm.stock.$pristine")
            i.fa.fa-check-circle-o.success.medium-icon(ng-show="productForm.stock.$valid && productForm.stock.$dirty")
            i.fa.fa-times-circle-o.error.medium-icon(ng-show="productForm.stock.$invalid && productForm.stock.$dirty")
        .form-container
          label(for="price", ng-show="productForm.price.$valid || productForm.price.$pristine")
            | Precio:
          label.error(for="price", ng-show="productForm.price.$invalid && productForm.price.$dirty")
            | Precio es requerido:
          .form-icon
            input.pure-input-1#price(name="price", data-ng-model="form.price", required="")
            i.fa.fa-dot-circle-o.medium-icon(ng-show="productForm.price.$pristine")
            i.fa.fa-check-circle-o.success.medium-icon(ng-show="productForm.price.$valid && productForm.price.$dirty")
            i.fa.fa-times-circle-o.error.medium-icon(ng-show="productForm.price.$invalid && productForm.price.$dirty")
        .form-container
          label(for="publisher")
            | Editorial:
          select.complete-1(data-ng-model="publisher", data-ng-change="form.publisher = publisher.name" data-ng-options="item as item.label for item in product.publishers track by item.name")
          input(type="hidden", data-ng-model="form.publisher")
        //- .form-container
        //-   label(for="cover", ng-show="productForm.cover.$valid || productForm.cover.$pristine")
        //-     | Imagen:
        //-   label.error(for="cover", ng-show="productForm.cover.$invalid && productForm.cover.$dirty")
        //-     | Imagen es requerido:
        //-   .form-icon
        //-     input.pure-input-1#cover(name="cover", data-ng-model="form.cover.url", required="")
        //-     i.fa.fa-dot-circle-o.medium-icon(ng-show="productForm.cover.$pristine")
        //-     i.fa.fa-check-circle-o.success.medium-icon(ng-show="productForm.cover.$valid && productForm.cover.$dirty")
        //-     i.fa.fa-times-circle-o.error.medium-icon(ng-show="productForm.cover.$invalid && productForm.cover.$dirty")

        //- .form-container
        //-   label(for="status", ng-show="productForm.status.$valid || productForm.status.$pristine")
        //-     | Status:
        //-   label.error(for="status", ng-show="productForm.status.$invalid && productForm.status.$dirty")
        //-     | Status es requerido:
        //-   .form-icon
        //-     input.pure-input-1#status(name="status", data-ng-model="form.status", required="")
        //-     i.fa.fa-dot-circle-o.medium-icon(ng-show="productForm.status.$pristine")
        //-     i.fa.fa-check-circle-o.success.medium-icon(ng-show="productForm.status.$valid && productForm.status.$dirty")
        //-     i.fa.fa-times-circle-o.error.medium-icon(ng-show="productForm.status.$invalid && productForm.status.$dirty")
        .form-container
          label(for="status")
            | Status:
          select.complete-1(data-ng-model="status", data-ng-change="form.status = status.name" data-ng-options="item as item.label for item in product.statusList track by item.name")
          input(type="hidden", data-ng-model="form.status")
  .align-center.margin-bottom
    a.pure-button.button-success.button-small(data-ng-click="saveProduct()", data-ng-class="{'pure-button-disabled': addressForm.$invalid, 'button-success':addressForm.$valid}")
      span(data-ng-if="productForm.$invalid")
        | Campos Requeridos    
        i.fa.fa-dot-circle-o.error
      span(data-ng-if="productForm.$valid")
        i.fa.fa-thumbs-o-up
        | Guardar
  .align-center.margin-bottom(data-ng-if="form.objectId")
    a.pure-button.button-small(data-ng-click="product.showForm(false)")
      | Cancelar
  .align-center.margin-bottom(data-ng-if="!form.objectId")
    a.pure-button.button-small(data-ui-sref="admin.publishers")
      | Regresar