form.pure-form.pure-form-stacked(name="productForm", novalidate="")
  fieldset
    .child-container
      ng-form(name="productForm")
        .form-container
          label(for="name", ng-show="productForm.name.$valid || productForm.name.$pristine")
            | Nombre:
          label.error(for="name", ng-show="productForm.name.$invalid && productForm.name.$dirty")
            | Nombre es requerido:
          .form-icon
            input.pure-input-1#name(name="name", data-ng-model="form.name", required="")
            i.fa.fa-dot-circle-o.medium-icon(ng-show="productForm.name.$pristine")
            i.fa.fa-check-circle-o.success.medium-icon(ng-show="productForm.name.$valid && productForm.name.$dirty")
            i.fa.fa-times-circle-o.error.medium-icon(ng-show="productForm.name.$invalid && productForm.name.$dirty")
        .form-container
          label(for="description", ng-show="productForm.description.$valid || productForm.description.$pristine")
            | Descripcion:
          label.error(for="description", ng-show="productForm.description.$invalid && productForm.description.$dirty")
            | Descripcion es requerido:
          .form-icon
            textarea.pure-input-1#description(name="description", data-ng-model="form.description", required="")
            i.fa.fa-dot-circle-o.medium-icon(ng-show="productForm.description.$pristine")
            i.fa.fa-check-circle-o.success.medium-icon(ng-show="productForm.description.$valid && productForm.description.$dirty")
            i.fa.fa-times-circle-o.error.medium-icon(ng-show="productForm.description.$invalid && productForm.description.$dirty")
        .form-container
          label(for="mainDesc", ng-show="productForm.mainDesc.$valid || productForm.mainDesc.$pristine")
            | Main Desc:
          label.error(for="mainDesc", ng-show="productForm.mainDesc.$invalid && productForm.mainDesc.$dirty")
            | Main Desc es requerida:
          .form-icon
            input.pure-input-1#mainDesc(name="mainDesc", data-ng-model="form.mainDesc", required="")
            i.fa.fa-dot-circle-o.medium-icon(ng-show="productForm.mainDesc.$pristine")
            i.fa.fa-check-circle-o.success.medium-icon(ng-show="productForm.mainDesc.$valid && productForm.mainDesc.$dirty")
            i.fa.fa-times-circle-o.error.medium-icon(ng-show="productForm.mainDesc.$invalid && productForm.mainDesc.$dirty")
        .form-container
          label(for="issueNo", ng-show="productForm.issueNo.$valid || productForm.issueNo.$pristine")
            | Numero:
          label.error(for="issueNo", ng-show="productForm.issueNo.$invalid && productForm.issueNo.$dirty")
            | Numero es requerido:
          .form-icon
            input.pure-input-1#issueNo(name="issueNo", data-ng-model="form.issueNo", required="")
            i.fa.fa-dot-circle-o.medium-icon(ng-show="productForm.issueNo.$pristine")
            i.fa.fa-check-circle-o.success.medium-icon(ng-show="productForm.issueNo.$valid && productForm.issueNo.$dirty")
            i.fa.fa-times-circle-o.error.medium-icon(ng-show="productForm.issueNo.$invalid && productForm.issueNo.$dirty")
        .form-container
          label(for="volumeTag", ng-show="productForm.volumeTag.$valid || productForm.volumeTag.$pristine")
            | Volume Tag:
          .form-icon
            input.pure-input-1#volumeTag(name="volumeTag", data-ng-model="form.volumeTag")
            i.fa.fa-dot-circle-o.medium-icon(ng-show="productForm.volumeTag.$pristine")
            i.fa.fa-check-circle-o.success.medium-icon(ng-show="productForm.volumeTag.$valid && productForm.volumeTag.$dirty")
            i.fa.fa-times-circle-o.error.medium-icon(ng-show="productForm.volumeTag.$invalid && productForm.volumeTag.$dirty")
        .form-container
          label(for="maxIssue", ng-show="productForm.maxIssue.$valid || productForm.maxIssue.$pristine")
            | Max Issue:
          .form-icon
            input.pure-input-1#maxIssue(name="maxIssue", data-ng-model="form.maxIssue")
            i.fa.fa-dot-circle-o.medium-icon(ng-show="productForm.maxIssue.$pristine")
            i.fa.fa-check-circle-o.success.medium-icon(ng-show="productForm.maxIssue.$valid && productForm.maxIssue.$dirty")
            i.fa.fa-times-circle-o.error.medium-icon(ng-show="productForm.maxIssue.$invalid && productForm.maxIssue.$dirty")
        .form-container
          label(for="diamondId", ng-show="productForm.diamondId.$valid || productForm.diamondId.$pristine")
            | DiamondId:
          .form-icon
            input.pure-input-1#diamondId(name="diamondId", data-ng-model="form.diamondId")
            i.fa.fa-dot-circle-o.medium-icon(ng-show="productForm.diamondId.$pristine")
            i.fa.fa-check-circle-o.success.medium-icon(ng-show="productForm.diamondId.$valid && productForm.diamondId.$dirty")
            i.fa.fa-times-circle-o.error.medium-icon(ng-show="productForm.diamondId.$invalid && productForm.diamondId.$dirty")
        .form-container
          label(for="stockId", ng-show="productForm.stockId.$valid || productForm.stockId.$pristine")
            | stockId:
          .form-icon
            input.pure-input-1#stockId(name="stockId", data-ng-model="form.stockId")
            i.fa.fa-dot-circle-o.medium-icon(ng-show="productForm.stockId.$pristine")
            i.fa.fa-check-circle-o.success.medium-icon(ng-show="productForm.stockId.$valid && productForm.stockId.$dirty")
            i.fa.fa-times-circle-o.error.medium-icon(ng-show="productForm.stockId.$invalid && productForm.stockId.$dirty")

        .form-container
          label(for="available")
            | Diponibilidad:
          select.complete-1(data-ng-model="available", data-ng-change="form.available = available.name" data-ng-options="item as item.label for item in product.availables track by item.name")
          input(type="hidden", data-ng-model="form.available")
        .form-container(data-ng-show="form.available == 'available'")
          label(for="stock", ng-show="productForm.stock.$valid || productForm.stock.$pristine")
            | Cantidad:
          label.error(for="stock", ng-show="productForm.stock.$invalid && productForm.stock.$dirty")
            | Cantidad es requerido:
          .form-icon
            input.pure-input-1#stock(name="stock", data-ng-model="form.stock", required="", ng-required="form.available == 'available'")
            i.fa.fa-dot-circle-o.medium-icon(ng-show="productForm.stock.$pristine")
            i.fa.fa-check-circle-o.success.medium-icon(ng-show="productForm.stock.$valid && productForm.stock.$dirty")
            i.fa.fa-times-circle-o.error.medium-icon(ng-show="productForm.stock.$invalid && productForm.stock.$dirty")
        .form-container
          label(for="price", ng-show="productForm.price.$valid || productForm.price.$pristine")
            | Precio:
          label.error(for="price", ng-show="productForm.price.$invalid && productForm.price.$dirty")
            | Precio es requerido:
          .form-icon
            input.pure-input-1#price(name="price", data-ng-model="form.price", required="")
            i.fa.fa-dot-circle-o.medium-icon(ng-show="productForm.price.$pristine")
            i.fa.fa-check-circle-o.success.medium-icon(ng-show="productForm.price.$valid && productForm.price.$dirty")
            i.fa.fa-times-circle-o.error.medium-icon(ng-show="productForm.price.$invalid && productForm.price.$dirty")
        .form-container
          label(for="publisher")
            | Editorial:
          select.complete-1(data-ng-model="publisher", data-ng-change="form.publisher = publisher.name" data-ng-options="item as item.label for item in product.publishers track by item.name")
          input(type="hidden", data-ng-model="form.publisher")
        .form-container
          label(for="cover", ng-show="productForm.cover.$valid || productForm.cover.$pristine")
            | Imagen URL:
          label.error(for="cover", ng-show="productForm.cover.$invalid && productForm.cover.$dirty")
            | Imagen es requerido:
          .form-icon
            input.pure-input-1#cover(name="cover", data-ng-model="form.coverUrl", required="")
            i.fa.fa-dot-circle-o.medium-icon(ng-show="productForm.cover.$pristine")
            i.fa.fa-check-circle-o.success.medium-icon(ng-show="productForm.cover.$valid && productForm.cover.$dirty")
            i.fa.fa-times-circle-o.error.medium-icon(ng-show="productForm.cover.$invalid && productForm.cover.$dirty")
        .form-container
          label(for="status")
            | Status:
          select.complete-1(data-ng-model="status", data-ng-change="form.status = status.name" data-ng-options="item as item.label for item in product.statusList track by item.name")
          input(type="hidden", data-ng-model="form.status")
        .form-container
          label(for="tags")
            | Tags:
          textarea(data-ng-model="tags")
            |{{tags}}

  .align-center.margin-bottom
    a.pure-button.button-small(data-ng-if="productForm.$invalid")
      i.fa.fa-dot-circle-o.error
      | Campos Requeridos    
    a.pure-button.button-success.button-small(data-ng-click="saveProduct()", data-ng-if="productForm.$valid")
      i.fa.fa-thumbs-o-up
      | Guardar
  .align-center.margin-bottom(data-ng-if="form.objectId")
    a.pure-button.button-small(data-ng-click="product.showForm(false)")
      | Cancelar
  .align-center.margin-bottom(data-ng-if="!form.objectId")
    a.pure-button.button-small(data-ui-sref="admin.publishers")
      | Regresar